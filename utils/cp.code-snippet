{
	"This template creates a bare minimum java file for CP.": {
		"prefix": "cp",
		"body": [
		  "import java.io.BufferedReader;",
		  "import java.io.IOException;",
		  "import java.io.InputStreamReader;",
		  "import java.io.PrintWriter;",
		  "import java.util.StringTokenizer;",
		  "",
		  "public class $TM_FILENAME_BASE {",
		  "    static class FastScanner {",
		  "        BufferedReader br;",
		  "        StringTokenizer st;",
		  "",
		  "        public FastScanner() {",
		  "            br = new BufferedReader(new InputStreamReader(System.in));",
		  "        }",
		  "",
		  "        public String next() {",
		  "            while (st == null || !st.hasMoreElements()) {",
		  "                try {",
		  "                    st = new StringTokenizer(br.readLine());",
		  "                } catch (IOException e) {",
		  "                    e.printStackTrace();",
		  "                }",
		  "            }",
		  "            return st.nextToken();",
		  "        }",
		  "",
		  "        public String nextLine() {",
		  "            try {",
		  "                if (st.hasMoreTokens()) {",
		  "                    return st.nextToken(\"\\n\");",
		  "                } else {",
		  "                    return br.readLine();",
		  "                }",
		  "            } catch (IOException e) {",
		  "                e.printStackTrace();",
		  "            }",
		  "            return \"\";",
		  "        }",
		  "",
		  "        public int nextInt() {",
		  "            return Integer.parseInt(next());",
		  "        }",
		  "",
		  "        public double nextDouble() {",
		  "            return Double.parseDouble(next());",
		  "        }",
		  "",
		  "        public long nextLong() {",
		  "            return Long.parseLong(next());",
		  "        }",
		  "    }",
		  "",
		  "",
		  "    public static void main(String[] args) {",
		  "        FastScanner sc = new FastScanner();",
		  "        PrintWriter out = new PrintWriter(System.out);",
		  "        int t = sc.nextInt(); //CHANGE IF NO TEST CASES",
		  "        while(t-- > 0){",
		  "                //START",
		  "                solve(sc, out);",
		  "        }",
		  "        out.flush();"
		  "    }",
		  "",
		  "    public static void solve(FastScanner sc, PrintWriter out){",
		  "        //START$0",
		  "    }"
		  "}"
		],
		"description": "This template creates a bare minimum java file for CP."
	  }
}